"use strict";(self.webpackChunkkeploy_docs=self.webpackChunkkeploy_docs||[]).push([[2712],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),p=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(i.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),g=p(n),m=a,d=g["".concat(i,".").concat(m)]||g[m]||c[m]||o;return n?r.createElement(d,l(l({ref:t},u),{},{components:n})):r.createElement(d,l({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=g;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:a,l[1]=s;for(var p=2;p<o;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},8215:function(e,t,n){n(7294)},9877:function(e,t,n){n(7294),n(2389),n(3725)},216:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return i},default:function(){return m},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return c}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),l=(n(8215),n(9877),["components"]),s={id:"run-your-first-app-tutorial",title:"Sample Application with the Go SDK",sidebar_label:"QuickStart",tags:["helloworld","go","sdk","tutorial"]},i="Example URL Shortener App",p={unversionedId:"go/run-your-first-app-tutorial",id:"go/run-your-first-app-tutorial",title:"Sample Application with the Go SDK",description:"A sample url shortener app to test Keploy integration capabilities in Go.",source:"@site/docs/go/run-your-first-app-tutorial.md",sourceDirName:"go",slug:"/go/run-your-first-app-tutorial",permalink:"/docs/go/run-your-first-app-tutorial",editUrl:"https://github.com/keploy/docs/blob/master/docs/go/run-your-first-app-tutorial.md",tags:[{label:"helloworld",permalink:"/docs/tags/helloworld"},{label:"go",permalink:"/docs/tags/go"},{label:"sdk",permalink:"/docs/tags/sdk"},{label:"tutorial",permalink:"/docs/tags/tutorial"}],version:"current",frontMatter:{id:"run-your-first-app-tutorial",title:"Sample Application with the Go SDK",sidebar_label:"QuickStart",tags:["helloworld","go","sdk","tutorial"]},sidebar:"sidebarGo",previous:{title:"Integrate with Go Test",permalink:"/docs/go/integration-with-go-test"}},u={},c=[{value:"Pre-requisites",id:"pre-requisites",level:3},{value:"Setup URL shortener",id:"setup-url-shortener",level:3},{value:"Run the application",id:"run-the-application",level:3},{value:"Generate testcases",id:"generate-testcases",level:2},{value:"1. Generate shortened url",id:"1-generate-shortened-url",level:3},{value:"2. Redirect to original url from shortened url",id:"2-redirect-to-original-url-from-shortened-url",level:3},{value:"Test mode",id:"test-mode",level:2},{value:"Testing using Unit Test File",id:"testing-using-unit-test-file",level:3},{value:"Testing using <code>KEPLOY_MODE</code> Env Variable",id:"testing-using-keploy_mode-env-variable",level:3},{value:"Let&#39;s add a Bug in the App",id:"lets-add-a-bug-in-the-app",level:2}],g={toc:c};function m(e){var t=e.components,n=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"example-url-shortener-app"},"Example URL Shortener App"),(0,o.kt)("p",null,"A sample url shortener app to test Keploy integration capabilities in Go."),(0,o.kt)("p",null,"In this sample application we're using 2 dependencies - Gin, mongoDB."),(0,o.kt)("h3",{id:"pre-requisites"},"Pre-requisites"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://golang.org/doc/install"},"Go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"docs/server/introduction#installation"},"Keploy Server"))),(0,o.kt)("p",null,"Once you have the Keploy Server running, open the Keploy Console at ",(0,o.kt)("a",{parentName:"p",href:"http://localhost:8081"},"http://localhost:8081")),(0,o.kt)("h3",{id:"setup-url-shortener"},"Setup URL shortener"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/keploy/samples-go.git && cd samples-go/gin-mongo\ngo mod download\n")),(0,o.kt)("h3",{id:"run-the-application"},"Run the application"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"go run handler.go main.go\n")),(0,o.kt)("h2",{id:"generate-testcases"},"Generate testcases"),(0,o.kt)("p",null,"To generate testcases we just need to ",(0,o.kt)("strong",{parentName:"p"},"make some API calls.")," You can use ",(0,o.kt)("a",{parentName:"p",href:"https://www.postman.com/"},"Postman"),", ",(0,o.kt)("a",{parentName:"p",href:"https://hoppscotch.io/"},"Hoppscotch"),", or simply ",(0,o.kt)("inlineCode",{parentName:"p"},"curl")),(0,o.kt)("h3",{id:"1-generate-shortened-url"},"1. Generate shortened url"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"curl --request POST \\\n  --url http://localhost:8080/url \\\n  --header 'content-type: application/json' \\\n  --data '{\n  \"url\": \"https://google.com\"\n}'\n")),(0,o.kt)("p",null,"this will return the shortened url. The ts would automatically be ignored during testing because it'll always be different."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'{\n  "ts": 1645540022,\n  "url": "http://localhost:8080/Lhr4BWAi"\n}\n')),(0,o.kt)("h3",{id:"2-redirect-to-original-url-from-shortened-url"},"2. Redirect to original url from shortened url"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"curl --request GET \\\n  --url http://localhost:8080/Lhr4BWAi\n")),(0,o.kt)("p",null,"or by querying through the browser ",(0,o.kt)("inlineCode",{parentName:"p"},"http://localhost:8080/Lhr4BWAi")),(0,o.kt)("p",null,"Now both these API calls were captured as a testcase and should be visible on the ",(0,o.kt)("a",{parentName:"p",href:"http://localhost:8081/testlist"},"Keploy console"),".\nIf you're using Keploy cloud, open ",(0,o.kt)("a",{parentName:"p",href:"https://app.keploy.io/testlist"},"this"),"."),(0,o.kt)("p",null,"You should be seeing an app named ",(0,o.kt)("inlineCode",{parentName:"p"},"sample-url-shortener")," with the test cases we just captured."),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/keploy/samples-go/main/gin-mongo/testcases.png",alt:"testcases"})),(0,o.kt)("p",null,"Now, let's see the magic! \ud83e\ude84\ud83d\udcab"),(0,o.kt)("h2",{id:"test-mode"},"Test mode"),(0,o.kt)("p",null,"There are 2 ways to test the application with Keploy. "),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"docs/go/run-your-first-app-tutorial#testing-using-unit-test-file"},"Unit Test File")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"docs/go/run-your-first-app-tutorial#testing-using-keploy_mode-env-variable"},"KEPLOY_MODE environment variable"))),(0,o.kt)("h3",{id:"testing-using-unit-test-file"},"Testing using Unit Test File"),(0,o.kt)("p",null,"Now that we have our testcase captured, run the unit test file (",(0,o.kt)("inlineCode",{parentName:"p"},"main_test.go"),") already present in the sample app repo."),(0,o.kt)("p",null,"If not present, you can add ",(0,o.kt)("inlineCode",{parentName:"p"},"main_test.go")," in the root of your sample application."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'  package main\n  \n  import (\n    "github.com/keploy/go-sdk/keploy"\n    "testing"\n  )\n  \n  func TestKeploy(t *testing.T) {\n      keploy.SetTestMode()\n      go main()\n      keploy.AssertTests(t)\n}\n')),(0,o.kt)("p",null,"To automatically download and run the captured test-cases. Let's run the test-file."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"}," go test -coverpkg=./... -covermode=atomic  ./...\n")),(0,o.kt)("p",null,"output should look like - "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"ok      test-app-url-shortener  6.268s  coverage: 80.3% of statements in ./...\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"We got 80.3% without writing any testcases or mocks for mongo db. \ud83c\udf89 ")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("strong",{parentName:"p"},"Note")," :  You didn't need to setup mongoDB locally or write mocks for your testing.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"The application thought it's talking to mongoDB \ud83d\ude04")),(0,o.kt)("p",null,"Go to the Keploy Console TestRuns Page to get deeper insights on what testcases ran, what failed."),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/keploy/samples-go/main/gin-mongo/testrun1.png",alt:"testruns",title:"Recent testruns"})),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/keploy/samples-go/main/gin-mongo/testrun2.png",alt:"testruns",title:"Summary"})),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/keploy/samples-go/main/gin-mongo/testrun3.png",alt:"testruns",title:"Detail"})),(0,o.kt)("h3",{id:"testing-using-keploy_mode-env-variable"},"Testing using ",(0,o.kt)("inlineCode",{parentName:"h3"},"KEPLOY_MODE")," Env Variable"),(0,o.kt)("p",null,"To test using ",(0,o.kt)("inlineCode",{parentName:"p"},"KEPLOY_MODE")," env variable, set the same to ",(0,o.kt)("inlineCode",{parentName:"p"},"test")," mode."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'export KEPLOY_MODE="test"\n')),(0,o.kt)("p",null,"Now simply run the application. "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"go run handler.go main.go\n")),(0,o.kt)("p",null,"Keploy will run all the captures test-cases, compare and show the results on the console. "),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("strong",{parentName:"p"},"Note")," : With this method coverage will not be calculated.")),(0,o.kt)("h2",{id:"lets-add-a-bug-in-the-app"},"Let's add a Bug in the App"),(0,o.kt)("p",null,"Now let's introduce a bug! Let's try changing something like renaming ",(0,o.kt)("inlineCode",{parentName:"p"},"url")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"urls")," in ",(0,o.kt)("a",{parentName:"p",href:"./handler.go"},"handler.go")," on line 96 "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'    ...\n    c.JSON(http.StatusOK, gin.H{\n        ...\n        "urls": "http://localhost:8080/" + id,\n    })\n    ...\n')),(0,o.kt)("p",null,"Let's run the test-file to see if Keploy catches the regression introduced."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"}," go test -coverpkg=./... -covermode=atomic  ./...")," "),(0,o.kt)("p",null,"You'll notice the failed test-case in the output."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'{"msg":"result","testcase id":"05a576e1-c03a-4c25-a469-4bea0307cd08","passed":false}\n{"msg":"result","testcase id":"cad6d926-b531-477c-935c-dd7314c4357a","passed":true}\n{"msg":"test run completed","run id":"19d4cba1-b77c-4301-884a-5b3f08dc6248","passed overall":false}\n--- FAIL: TestKeploy (5.72s)\n    keploy.go:42: Keploy test suite failed\nFAIL\ncoverage: 80.3% of statements in ./...\nFAIL    test-app-url-shortener  6.213s\nFAIL\n')),(0,o.kt)("p",null,"To deep dive the problem go to ",(0,o.kt)("a",{parentName:"p",href:"http://localhost:8081/testruns"},"test runs")),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/keploy/samples-go/main/gin-mongo/testrun4.png",alt:"testruns",title:"Recent testruns"})),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/keploy/samples-go/main/gin-mongo/testrun5.png",alt:"testruns",title:"Detail"})))}m.isMDXComponent=!0}}]);